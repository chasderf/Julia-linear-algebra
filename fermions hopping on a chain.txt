julia> using LinearAlgebra

julia> N = 100
100

julia> t - 1
ERROR: UndefVarError: `t` not defined
Stacktrace:
 [1] top-level scope
   @ REPL[3]:1

julia> T = 1
1

julia> μ = -0.5
-0.5
julia> H = diagm(0 => fill(μ, N), 1 => fill(-T, N-1), -1 => fill(-T, N-1))
100×100 Matrix{Float64}:
 -0.5  -1.0   0.0  …   0.0   0.0   0.0
 -1.0  -0.5  -1.0      0.0   0.0   0.0
  0.0  -1.0  -0.5      0.0   0.0   0.0
  0.0   0.0  -1.0      0.0   0.0   0.0
  0.0   0.0   0.0      0.0   0.0   0.0
  0.0   0.0   0.0  …   0.0   0.0   0.0
  0.0   0.0   0.0      0.0   0.0   0.0
  0.0   0.0   0.0      0.0   0.0   0.0
  0.0   0.0   0.0      0.0   0.0   0.0
  0.0   0.0   0.0      0.0   0.0   0.0
  0.0   0.0   0.0  …   0.0   0.0   0.0
  0.0   0.0   0.0      0.0   0.0   0.0
  0.0   0.0   0.0      0.0   0.0   0.0
  ⋮                ⋱
  0.0   0.0   0.0      0.0   0.0   0.0
  0.0   0.0   0.0      0.0   0.0   0.0
  0.0   0.0   0.0  …   0.0   0.0   0.0
  0.0   0.0   0.0      0.0   0.0   0.0
  0.0   0.0   0.0      0.0   0.0   0.0
  0.0   0.0   0.0      0.0   0.0   0.0
  0.0   0.0   0.0      0.0   0.0   0.0
  0.0   0.0   0.0  …   0.0   0.0   0.0
  0.0   0.0   0.0     -1.0   0.0   0.0
  0.0   0.0   0.0     -0.5  -1.0   0.0
  0.0   0.0   0.0     -1.0  -0.5  -1.0
  0.0   0.0   0.0      0.0  -1.0  -0.5

julia> ψ = normalize(rand(N));

julia> ev(H, ψ) = ψ'*H*ψ # \phi
ev (generic function with 1 method)

julia> ev(H, ψ) = ψ'*H*ψ $ϕ|H|ϕ>
       ev(H, ψ)
ev (generic function with 1 method)

julia> ev(H, ψ)
ERROR: UndefVarError: `$` not defined
Stacktrace:
 [1] ev(H::Matrix{Float64}, ψ::Vector{Float64})
   @ Main .\REPL[9]:1
 [2] top-level scope
   @ REPL[10]:1

julia> typeof(H)
Matrix{Float64} (alias for Array{Float64, 2})

julia> using SparseArrays

julia> Hsparse = sparse(H)
100×100 SparseMatrixCSC{Float64, Int64} with 298 stored entries:
⎡⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⎤
⎢⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⎥
⎢⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⎥
⎢⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⎥
⎢⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⎥
⎢⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⎥
⎢⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⎥
⎢⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⎥
⎢⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⎥
⎢⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⎥
⎣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⎦

julia> Htri = Tridiagonal(H)
100×100 Tridiagonal{Float64, Vector{Float64}}:
 -0.5  -1.0    ⋅   …    ⋅     ⋅     ⋅
 -1.0  -0.5  -1.0       ⋅     ⋅     ⋅
   ⋅   -1.0  -0.5       ⋅     ⋅     ⋅
   ⋅     ⋅   -1.0       ⋅     ⋅     ⋅
   ⋅     ⋅     ⋅        ⋅     ⋅     ⋅
   ⋅     ⋅     ⋅   …    ⋅     ⋅     ⋅
   ⋅     ⋅     ⋅        ⋅     ⋅     ⋅
   ⋅     ⋅     ⋅        ⋅     ⋅     ⋅
   ⋅     ⋅     ⋅        ⋅     ⋅     ⋅
   ⋅     ⋅     ⋅        ⋅     ⋅     ⋅
   ⋅     ⋅     ⋅   …    ⋅     ⋅     ⋅
   ⋅     ⋅     ⋅        ⋅     ⋅     ⋅
   ⋅     ⋅     ⋅        ⋅     ⋅     ⋅
  ⋮                ⋱
   ⋅     ⋅     ⋅        ⋅     ⋅     ⋅
   ⋅     ⋅     ⋅        ⋅     ⋅     ⋅
   ⋅     ⋅     ⋅   …    ⋅     ⋅     ⋅
   ⋅     ⋅     ⋅        ⋅     ⋅     ⋅
   ⋅     ⋅     ⋅        ⋅     ⋅     ⋅
   ⋅     ⋅     ⋅        ⋅     ⋅     ⋅
   ⋅     ⋅     ⋅        ⋅     ⋅     ⋅
   ⋅     ⋅     ⋅   …    ⋅     ⋅     ⋅
   ⋅     ⋅     ⋅      -1.0    ⋅     ⋅
   ⋅     ⋅     ⋅      -0.5  -1.0    ⋅
   ⋅     ⋅     ⋅      -1.0  -0.5  -1.0
   ⋅     ⋅     ⋅        ⋅   -1.0  -0.5

julia> 